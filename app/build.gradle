plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

Properties localProperties = new Properties()
localProperties.load(project.rootProject.file("local.properties").newDataInputStream())

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.shoplist"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures{
        viewBinding true
    }

    buildTypes.each {
        it.buildConfigField "String", "BASE_URL", "\"" + localProperties['BASE_URL'] + "\""
    }
}

dependencies {
    //binding
    implementation(libs.viewbinding.delegate)

    //retrofit
    implementation(libs.retrofit2.core)
    implementation(libs.retrofit2.gson)
    implementation(libs.gson)
    implementation(libs.retrofit2.coroutines)

    //koin
    implementation(libs.koin.core)
    implementation(libs.koin.android)

    //glide
    implementation(libs.glide)

    //room
    implementation(libs.room.runtime)
    kapt(libs.room.compiler)
    implementation(libs.room.ktx)

    //moxy
    implementation(libs.moxy.core)
    implementation(libs.moxy.android)
    implementation(libs.moxy.appcompat)
    implementation(libs.moxy.ktx)
    kapt(libs.moxy.compiler)

    //androidx
    implementation(libs.androidx.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.constraint)
    implementation(libs.androidx.livedata)
    implementation(libs.androidx.viewmodel)

    //material
    implementation(libs.android.material)

    implementation project(':feature_detail_recipe')
    implementation project(':data_remote')
    implementation project(':domain')
    implementation project(':Core')
}